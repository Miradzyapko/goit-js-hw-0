{"mappings":"gfAAAA,EAAA,S,iBAQMC,EAAQC,SAASC,cAAc,uBAC9BC,EAAOF,SAASC,cAAc,sBAC7BE,EAASH,SAASC,cAAc,wBAuBxC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,IAMxC,SAA+BL,EAAUM,EAAOF,EAASC,GACvDE,YAAW,WACaC,KAAKC,SAAW,GAEpCL,EAAQ,CAAEJ,WAAUU,MAAAJ,IAEpBD,EAAO,CAAEL,WAAUU,MAAAJ,G,GAEpBA,E,CAbDK,CAAsBX,EAAUC,EAAOG,EAASC,E,IAElD,OAAOH,C,CAaT,SAASU,EAAUC,G,IAAEb,EAAFa,EAAEb,SAAUc,EAAZD,EAAYH,MAC7BK,EAAAC,OAAOC,QAAQ,qBAAoCC,OAAflB,EAAS,QAAYkB,OAANJ,EAAM,M,CAG3D,SAASK,EAAQN,G,IAAEb,EAAFa,EAAEb,SAAUoB,EAAZP,EAAYH,MAC3BK,EAAAC,OAAOK,QAAQ,mBAAkCH,OAAflB,EAAS,QAAYkB,OAANE,EAAM,M,CA5CrCzB,SAASC,cAAc,yBAOhC0B,iBAAiB,UAG5B,SAA6BC,GAC3BA,EAAMC,iBAIN,IAHA,IAAMC,EAAaC,OAAOhC,EAAMiC,OAC1BC,EAAYF,OAAO7B,EAAK8B,OACxBE,EAAkB/B,EAAO6B,MACtBG,EAAI,EAAGA,EAAID,EAAiBC,GAAK,EACxC/B,EAAc,EAAI+B,EAAGL,EAAaK,EAAIF,GACnCG,MAAK,SAAAlB,G,OAAyBD,EAAU,CAAEZ,SAA1Ba,EAARb,SAA4CU,MAA7BG,EAALH,O,IAClBsB,OAAM,SAAAnB,G,OAAyBM,EAAQ,CAAEnB,SAAxBa,EAARb,SAA0CU,MAA3BG,EAALH,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n//\n\nconst delay = document.querySelector('input[name=\"delay\"]');\n const step = document.querySelector('input[name=\"step\"]');\n const  amount = document.querySelector('input[name=\"amount\"]');\n const btnPromise = document.querySelector('button[type=\"submit\"]');\n\n\n\n\n\n\nbtnPromise.addEventListener('submit', startCreatePromise);\n\n\nfunction startCreatePromise (event) {\n  event.preventDefault();\n  const firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountInputUser = amount.value;\n  for (let i = 0; i < amountInputUser; i += 1) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => onSuccess({ position, delay }))\n      .catch(({ position, delay }) => onError({ position, delay }));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    getPromiseFromBackend(position, delay, resolve, reject);\n  });\n  return promise;\n}\n\nfunction getPromiseFromBackend(position, delay, resolve, reject) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n}\nfunction onSuccess({ position, delay }) {\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`Rejcted promise ${position} in ${delay}ms`);\n}"],"names":["parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","promise","Promise","resolve","reject","delay4","setTimeout","Math","random","delay","$ce04d3a99e08e73b$var$getPromiseFromBackend","$ce04d3a99e08e73b$var$onSuccess","param","delay5","$h6c0i","Notify","success","concat","$ce04d3a99e08e73b$var$onError","delay6","failure","addEventListener","event","preventDefault","firstDelay","Number","value","delayStep","amountInputUser","i","then","catch"],"version":3,"file":"03-promises.17fce269.js.map"}